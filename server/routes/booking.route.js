const express = require("express")
const router = express.Router()

const { createBooking, listBookings, readBooking, confirmBooking } = require("../controllers/booking.controller")
const { checkIn, checkOut } = require("../controllers/checkInAndCheckOut.controller")

const { authCheck, frontCheck } = require("../middlewares/authCheck")
const { z } = require('zod');
const validateWithZod = require('../middlewares/validateWithZod');

const bookingCreateSchema = z.object({
  count: z.preprocess(val => Number(val), z.number().min(1)),
  roomType: z.enum(['SINGLE', 'DOUBLE', 'SIGNATURE']),
  checkInDate: z.string().min(1),
  checkOutDate: z.string().min(1),
  addon: z.array(z.object({
    addonId: z.number(),
    quantity: z.number()
  })).optional()
});

// üîπ ‡∏™‡∏£‡πâ‡∏≤‡∏á Booking (‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏à‡∏≠‡∏á‡∏´‡πâ‡∏≠‡∏á)
router.post("/bookings", authCheck, validateWithZod(bookingCreateSchema), createBooking); //‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô "/booking" ‚Üí "/bookings"

// üîπ ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ Booking ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
router.get("/bookings", authCheck, listBookings);

// üîπ ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Booking ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
router.get("/bookings/:id", authCheck, readBooking); //‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô "/booking/:id" ‚Üí "/bookings/:id"

// üîπ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á (‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô Front ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)
router.put("/bookings/:id/confirm", authCheck, frontCheck, confirmBooking); //‡πÉ‡∏ä‡πâ PUT ‡πÅ‡∏ó‡∏ô POST ‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏° "/confirm"

// // üîπ Check-in ‡πÉ‡∏´‡πâ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
router.put("/bookings/:id/check-in", authCheck, checkIn); //‡πÉ‡∏ä‡πâ PUT ‡πÅ‡∏•‡∏∞‡∏£‡∏ß‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ö bookings

// üîπ Check-out ‡πÉ‡∏´‡πâ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
router.put("/bookings/:id/check-out", authCheck, checkOut); //‡πÉ‡∏ä‡πâ PUT ‡πÅ‡∏•‡∏∞‡∏£‡∏ß‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ö bookings

module.exports = router
